package template

import (
	"strconv"
	"github.com/ostcar/bietrunde/model"
)

func bieterWithName(bieter []model.Bieter) string {
	var count int
	for _, b := range bieter {
		if b.Name() != "" {
			count++
		}
	}
	return strconv.Itoa(count)
}

func gesamtGebot(bieter []model.Bieter) model.Gebot {
	var count model.Gebot
	for _, b := range bieter {
		count += b.Gebot
	}
	return count
}

func averageGebot(bieter []model.Bieter) model.Gebot {
	var gebotSum model.Gebot
	var gebotCount int
	for _, b := range bieter {
		if b.Gebot.Empty() {
			continue
		}
		gebotSum += b.Gebot
		gebotCount++
	}

	if gebotCount == 0 {
		return 0
	}

	return gebotSum / model.Gebot(gebotCount)
}

func gebotCount(bieter []model.Bieter) string {
	var gebotCount int
	for _, b := range bieter {
		if !b.Gebot.Empty() {
			gebotCount++
		}
	}
	return strconv.Itoa(gebotCount)
}

templ Admin(state model.ServiceState, bieter []model.Bieter) {
	@layout("Admin", true) {
		<h1 class="title is-3">Admin</h1>
		@AdminUserTable(bieter)
		<div class="box">
			<div
 				class="button is-primary"
 				hx-post="/admin/new"
 				hx-target="#admin-user-table"
 				hx-swap="outerHTML"
			>
				Bieter HinzufÃ¼gen
			</div>
			<div class="select">
				@AdminStateSelect(state)
			</div>
			<div
 				class="button is-danger"
 				hx-delete="/admin/reset-gebot"
 				hx-target="#admin-user-table"
 				hx-swap="outerHTML"
 				hx-confirm="Wirklich alle Gebote zurÃ¼cksetzen?"
			>
				Neue Bietrunde
			</div>
		</div>
		@AdminModalEmpty()
	}
}

templ AdminStateSelect(state model.ServiceState) {
	<select
 		name="state"
 		class="button is-info"
 		hx-post="/admin/state"
 		hx-swap="outerHTML"
	>
		<option selected?={ state == model.StateRegistration } value={ model.StateRegistration.ToAttr() }>Registrierung</option>
		<option selected?={ state == model.StateValidation } value={ model.StateValidation.ToAttr() }>ÃœberprÃ¼fung</option>
		<option selected?={ state == model.StateOffer } value={ model.StateOffer.ToAttr() }>Bieten</option>
	</select>
}

templ AdminUserTable(bieter []model.Bieter) {
	<div id="admin-user-table">
		<table class="table box">
			<thead>
				<tr>
					<th>Bietnummer</th>
					<th>Name</th>
					<th>Gebot</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, bieter := range bieter {
					<tr>
						<th>{ strconv.Itoa(bieter.ID) }</th>
						<th>{ bieter.Name() }</th>
						<th>{ bieter.Gebot.String() }</th>
						<th>
							<button
 								class="button is-warning is-small"
 								hx-get={ "/admin/edit/"+ strconv.Itoa(bieter.ID) }
 								hx-swap="none"
							>âœŽ</button>
							<button
 								class="button is-danger is-small"
 								hx-delete={ "/admin/delete/"+ strconv.Itoa(bieter.ID) }
 								hx-confirm={ bieter.Name() + " wirklich lÃ¶schen?" }
 								hx-target="#admin-user-table"
 								hx-swap="outerHTML"
							>ðŸ—‘</button>
						</th>
					</tr>
				}
			</tbody>
		</table>
		<div class="box">
			<ul>
				<li>Es gibt <strong>{ strconv. Itoa(len(bieter )) }</strong> Bieter.</li>
				<li>Davon <strong>{ bieterWithName(bieter) }</strong> mit Namen.</li>
				<li>Es wurden <strong>{ gebotCount(bieter) }</strong> Gebote abgegeben.</li>
				<li>Das gesamte Gebot ist <strong>{ gesamtGebot(bieter).String() }</strong>.</li>
				<li>Das durchschnittliche Gebot liegt bei <strong>{ averageGebot(bieter).String() }</strong>.</li>
			</ul>
		</div>
	</div>
}

templ AdminBieterEdit(bieter model.Bieter, err string) {
	@adminModal(bieter.Name(), "/admin/edit/"+ strconv.Itoa(bieter.ID)) {
		@bieterEditFormFields(bieter, err)
	}
}

script closeAdminModal() {
    var element = document.getElementById("admin-modal");
	element.classList.remove("is-active");
}

templ AdminModalEmpty() {
	<div id="admin-modal" hx-swap-oob="true"></div>
}

templ adminModal(title string, postURL string) {
	<div id="admin-modal" hx-swap-oob="true" class="modal is-active">
		<div class="modal-background"></div>
		<form
 			hx-post={ postURL }
 			hx-target="#admin-user-table"
 			hx-swap="outerHTML"
		>
			<div class="modal-card">
				<header class="modal-card-head">
					<p class="modal-card-title">{ title }</p>
					<button class="delete" aria-label="close" onClick={ closeAdminModal() }></button>
				</header>
				<section class="modal-card-body">
					{ children... }
				</section>
				<footer class="modal-card-foot">
					<button class="button is-success" type="submit">Speichern</button>
					<button
 						class="button"
 						type="button"
 						onClick={ closeAdminModal() }
					>Abbrechen</button>
				</footer>
			</div>
		</form>
	</div>
}

templ AdminLogin(err string) {
	@layout("Admin", false) {
		<h1 class="title is-3">Admin Login</h1>
		<form action="/admin" method="post">
			<div class="field">
				<label class="label">Passwort:</label>
				<div class="control">
					<input name="password" class="input" type="password"/>
				</div>
			</div>
			if err != "" {
				<p class="help is-danger">{ err }</p>
			}
			<div class="control">
				<button class="button is-primary" type="submit">Anmelden</button>
			</div>
		</form>
	}
}
